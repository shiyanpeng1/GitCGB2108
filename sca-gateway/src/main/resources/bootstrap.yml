server:
  port: 9000
spring:
  application:
    name: sca-gateway
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
      config: #配置服务配置中心地址
        server-addr: localhost:8848
        file-extension: yml
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowCredentials: true
            allowedHeaders: "*"
            allowedOrigins: "*"
            allowedMethods:
              - GET
        add-to-simple-url-handler-mapping: true
      routes: #配置网关路由规则
        - id: route01  #路由id,自己指定一个唯一值即可
          #uri: http://localhost:8081/ #网关帮我们转发的url
          uri: lb://sca-provider #底层启动了全局过滤器(GlobalFilter)，在过滤器内部使用ribbon负载均衡
          predicates: ###断言(谓词):匹配请求规则
            - Path=/nacos/provider/echo/**  #请求路径定义,此路径对应uri中的资源
          filters: ##网关过滤器(GatewayFilter),用于对谓词中的内容进行判断分析以及处理
            - StripPrefix=1 #转发之前去掉path中第一层路径，例如nacos
    sentinel: #只添加这部分即可，注意缩进关系
     transport:
       dashboard: localhost:8180
     eager: true  #服务一启动就与sentinel进行通讯
sca-provider:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule



